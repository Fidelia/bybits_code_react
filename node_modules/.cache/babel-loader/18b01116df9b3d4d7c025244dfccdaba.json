{"ast":null,"code":"import axios from \"axios\";\nimport { CookieStorage } from \"cookie-storage\";\nimport { setError, setLoading } from \"./status\";\nexport const LOG_IN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOG_IN_FAIL = \"LOG_IN_FAIL\";\nexport const SET_USER_POLICY_DETAILS = \"SET_USER_POLICY_DETAILS\";\nconst API_URL = \"https://api.bybits.co.uk\";\nexport const login = (username, password) => async dispatch => {\n  try {\n    const response = await axios.post(`${API_URL}/auth/token`, {\n      username,\n      password,\n      type: \"USER_PASSWORD_AUTH\"\n    }, {\n      headers: {\n        environment: \"mock\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(response.data);\n    const {\n      access_token,\n      refresh_token\n    } = response.data;\n    const cookieStorage = new CookieStorage();\n    cookieStorage.setItem(\"refresh_token\", refresh_token);\n    dispatch({\n      type: LOG_IN_SUCCESS,\n      payload: access_token\n    });\n    dispatch(getPolicyDetails(access_token));\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: LOG_IN_FAIL\n    });\n    dispatch(setError(\"oops... login failed\"));\n  }\n};\nexport const getPolicyDetails = token => async dispatch => {\n  try {\n    dispatch(setLoading(true));\n    const response = await axios.get(`${API_URL}/auth/token`, {\n      headers: {\n        environment: \"mock\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    });\n    console.log({\n      policy: response.data\n    });\n  } catch (err) {\n    console.log(err);\n  } finally {\n    dispatch(setLoading(false));\n  }\n};","map":{"version":3,"sources":["/Users/Joseph/Documents/GitHub/bybits_code_react/Untitled/src/store/actions/api.js"],"names":["axios","CookieStorage","setError","setLoading","LOG_IN_SUCCESS","LOG_IN_FAIL","SET_USER_POLICY_DETAILS","API_URL","login","username","password","dispatch","response","post","type","headers","environment","console","log","data","access_token","refresh_token","cookieStorage","setItem","payload","getPolicyDetails","err","token","get","Authorization","policy"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,UAArC;AAEA,OAAO,MAAMC,cAAc,GAAG,eAAvB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,uBAAuB,GAAG,yBAAhC;AAEP,MAAMC,OAAO,GAAG,0BAAhB;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB,MAAOC,QAAP,IAAoB;AAC/D,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAN,CACpB,GAAEN,OAAQ,aADU,EAErB;AACEE,MAAAA,QADF;AAEEC,MAAAA,QAFF;AAGEI,MAAAA,IAAI,EAAE;AAHR,KAFqB,EAOrB;AACEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAE,MADN;AAEP,wBAAgB;AAFT;AADX,KAPqB,CAAvB;AAeAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAQ,CAACO,IAArB;AACA,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAAkCT,QAAQ,CAACO,IAAjD;AAEA,UAAMG,aAAa,GAAG,IAAIrB,aAAJ,EAAtB;AACAqB,IAAAA,aAAa,CAACC,OAAd,CAAsB,eAAtB,EAAuCF,aAAvC;AAEAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEV,cAAR;AAAwBoB,MAAAA,OAAO,EAAEJ;AAAjC,KAAD,CAAR;AACAT,IAAAA,QAAQ,CAACc,gBAAgB,CAACL,YAAD,CAAjB,CAAR;AACD,GAxBD,CAwBE,OAAOM,GAAP,EAAY;AACZT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACAf,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET;AAAR,KAAD,CAAR;AACAM,IAAAA,QAAQ,CAACT,QAAQ,CAAC,sBAAD,CAAT,CAAR;AACD;AACF,CA9BM;AAgCP,OAAO,MAAMuB,gBAAgB,GAAIE,KAAD,IAAW,MAAOhB,QAAP,IAAoB;AAC7D,MAAI;AACFA,IAAAA,QAAQ,CAACR,UAAU,CAAC,IAAD,CAAX,CAAR;AACA,UAAMS,QAAQ,GAAG,MAAMZ,KAAK,CAAC4B,GAAN,CAAW,GAAErB,OAAQ,aAArB,EAAmC;AACxDQ,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAE,MADN;AAEP,wBAAgB,kBAFT;AAGPa,QAAAA,aAAa,EAAG,UAASF,KAAM;AAHxB;AAD+C,KAAnC,CAAvB;AAOAV,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEY,MAAAA,MAAM,EAAElB,QAAQ,CAACO;AAAnB,KAAZ;AACD,GAVD,CAUE,OAAOO,GAAP,EAAY;AACZT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACD,GAZD,SAYU;AACRf,IAAAA,QAAQ,CAACR,UAAU,CAAC,KAAD,CAAX,CAAR;AACD;AACF,CAhBM","sourcesContent":["import axios from \"axios\";\nimport { CookieStorage } from \"cookie-storage\";\nimport { setError, setLoading } from \"./status\";\n\nexport const LOG_IN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOG_IN_FAIL = \"LOG_IN_FAIL\";\nexport const SET_USER_POLICY_DETAILS = \"SET_USER_POLICY_DETAILS\";\n\nconst API_URL = \"https://api.bybits.co.uk\";\n\nexport const login = (username, password) => async (dispatch) => {\n  try {\n    const response = await axios.post(\n      `${API_URL}/auth/token`,\n      {\n        username,\n        password,\n        type: \"USER_PASSWORD_AUTH\",\n      },\n      {\n        headers: {\n          environment: \"mock\",\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    console.log(response.data);\n    const { access_token, refresh_token } = response.data;\n\n    const cookieStorage = new CookieStorage();\n    cookieStorage.setItem(\"refresh_token\", refresh_token);\n\n    dispatch({ type: LOG_IN_SUCCESS, payload: access_token });\n    dispatch(getPolicyDetails(access_token));\n  } catch (err) {\n    console.log(err);\n    dispatch({ type: LOG_IN_FAIL });\n    dispatch(setError(\"oops... login failed\"));\n  }\n};\n\nexport const getPolicyDetails = (token) => async (dispatch) => {\n  try {\n    dispatch(setLoading(true));\n    const response = await axios.get(`${API_URL}/auth/token`, {\n      headers: {\n        environment: \"mock\",\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    console.log({ policy: response.data });\n  } catch (err) {\n    console.log(err);\n  } finally {\n    dispatch(setLoading(false));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}